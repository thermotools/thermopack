"""
Scripts to generate readme's and wiki-documentation files by joining various markdown files in thermopack/doc/markdown

Intent: Several "submodules" of documentation are used both in the wiki, the main github README, the pypi README and
        possibly other places. Each of these "submodules" should be contained in a single markdown file in the
        thermopack/doc/markdown directory. Each function in this file generates a single markdown file by joining
        the appropriate submodules, and prepending the header generated by the get_header(files) function.

Usage: To add new documentation, create a new markdown file in thermopoack/doc/markdown, and add the filename
        (sans the file ending) to the appropriate `files` lists in the functions in this file.
"""
from datetime import datetime
from tools import THERMOPACK_ROOT, MARKDOWN_DIR

def print_finished_report(header, out_file_path):
    printcolwidth = 100
    print('-' * printcolwidth)
    print('Wrote documentation file with the header :')
    print('#' * printcolwidth)
    print(header)
    print('#' * printcolwidth)
    print('-' * printcolwidth)
    print('To:', out_file_path)
    print('-' * printcolwidth)
    print()
def gen_file_str(files):
    out_file_str = ''
    for file in files:
        file_path = MARKDOWN_DIR + file + '.md'

        with open(file_path, 'r') as in_file:
            out_file_str += in_file.read() + '\n'

    return out_file_str

def get_header(files):
    header = '<!--- \n'
    header += 'Generated at: ' + datetime.today().isoformat() + '\n'
    header += 'This is an auto-generated file, generated using the script at thermopack/addon/pyUtils/docs/join_docs.py\n'
    header += 'The file is created by joining the contents of the files\n'
    header += '    thermopack/doc/markdown/\n'
    for fname in files:
        header += '    ' * 2 + fname + '.md\n'
    header += '--->\n'
    return header

def write_pypi_readme():
    files = ['header', 'pypi_toc', 'cite_acknowl_licence', 'pypi_structure', 'getting_started', 'more_advanced']
    header = get_header(files)

    out_file_str = gen_file_str(files)
    out_file_path = THERMOPACK_ROOT + '/addon/pycThermopack/README_pypi.md'
    with open(out_file_path, 'w') as out_file:
        out_file.write(header)
        out_file.write(out_file_str)

    print_finished_report(header, out_file_path)
def write_github_readme():
    files = ['header', 'github_toc', 'cite_acknowl_licence', 'structure', 'source_build', 'getting_started',
             'more_advanced']
    header = get_header(files)

    out_file_str = gen_file_str(files)
    out_file_path = THERMOPACK_ROOT + '/README.md'
    with open(out_file_path, 'w') as out_file:
        out_file.write(header)
        out_file.write(out_file_str)

    print_finished_report(header, out_file_path)

if __name__ == '__main__':
    write_pypi_readme()
    write_github_readme()

